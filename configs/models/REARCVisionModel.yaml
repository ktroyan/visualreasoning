model:
  backbone: 'vit'  # choices: 'vit', 'resnet'
  head: 'mlp'  # choices: 'mlp'
  pretrained: null
  patch_size: 1
  pos_embed: 'learn'  # choices: 'learn', '' (TODO: check if '' for no PE or non-learned PE?)
  use_cls_token: false # whether to use a cls token or not
  nb_reg_tokens: 0
  global_pool_method: '' # choices: '' (for no pooling and returning a sequence), 'mean', 'max', 'token' (for aggretating features and returning the cls token)
  n_tasks: 400    # used for the task embedding (i.e., to inform the model through an embedding of which tasks to consider)
  task_embedding:
    enabled: false
    task_embedding_dim: ${resolve_if_then_else:${model.task_embedding.enabled},128}
  output_embed_dim: 128
  training_hparams:
    optimizer: 'Adam' # choices: Adam, AdamW, SGD
    scheduler: 'ReduceLROnPlateau' # choices: ReduceLROnPlateau, StepLR, MultiStepLR, ExponentialLR, CosineAnnealingLR
    lr: 0.001
    wd: 0.001